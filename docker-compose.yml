version: '3.8'

services:
  postgres:
    image: postgres:14-alpine
    container_name: lumi-postgres
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres
      POSTGRES_DB: lumi
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres"]
      interval: 5s
      timeout: 5s
      retries: 5
    networks:
      - lumi-network

  redis:
    image: redis:6-alpine
    container_name: lumi-redis
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 5s
      timeout: 5s
      retries: 5
    networks:
      - lumi-network

  jaeger:
    image: jaegertracing/all-in-one:latest
    container_name: lumi-jaeger
    ports:
      - "6831:6831/udp"  # jaeger-agent thrift compact
      - "6832:6832/udp"  # jaeger-agent thrift binary
      - "5778:5778"      # jaeger-agent configs
      - "16686:16686"    # jaeger-query
      - "4317:4317"      # OTLP gRPC
      - "4318:4318"      # OTLP HTTP
      - "14250:14250"    # jaeger-agent HTTP
    environment:
      - COLLECTOR_ZIPKIN_HOST_PORT=:9411
      - COLLECTOR_OTLP_ENABLED=true
    networks:
      - lumi-network

networks:
  lumi-network:
    driver: bridge

volumes:
  postgres_data:
  redis_data: