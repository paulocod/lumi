version: '3.8'

services:
  backend:
    build:
      context: ./backend
      dockerfile: Dockerfile
    container_name: lumi-backend
    ports:
      - "3001:3001"
    environment:
      - NODE_ENV=development
      - DATABASE_URL=postgresql://postgres:postgres@postgres:5432/lumi
      - REDIS_URL=redis://redis:6379
      - JAEGER_OTLP_ENDPOINT=http://jaeger:4318/v1/traces
      - PORT=3001
      - JWT_SECRET=${JWT_SECRET:-sua-chave-secreta-muito-segura-123}
      - JWT_EXPIRATION=1d
      - API_PREFIX=api
      - CORS_ENABLED=true
      - CORS_ORIGIN=*
      - RATE_LIMIT_TTL=60
      - RATE_LIMIT_MAX=10
      - PDF_DOWNLOAD_TIMEOUT=30000
      - PDF_MAX_SIZE=5242880
      - PDF_CACHE_TTL=3600
      - OTEL_SERVICE_NAME=lumi-backend
      - OTEL_SERVICE_VERSION=1.0.0
    depends_on:
      postgres:
        condition: service_healthy
      redis:
        condition: service_healthy
      jaeger:
        condition: service_started
    healthcheck:
      test: ["CMD", "wget", "--spider", "http://localhost:3001/api/health"]
      interval: 30s
      timeout: 10s
      retries: 3
    networks:
      - lumi-network

  postgres:
    image: postgres:14-alpine
    container_name: lumi-postgres
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres
      POSTGRES_DB: lumi
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres"]
      interval: 5s
      timeout: 5s
      retries: 5
    networks:
      - lumi-network

  redis:
    image: redis:6-alpine
    container_name: lumi-redis
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 5s
      timeout: 5s
      retries: 5
    networks:
      - lumi-network

  jaeger:
    image: jaegertracing/all-in-one:latest
    container_name: lumi-jaeger
    ports:
      - "6831:6831/udp"
      - "6832:6832/udp"
      - "5778:5778"
      - "16686:16686"
      - "4317:4317"
      - "4318:4318"
      - "14250:14250"
    environment:
      - COLLECTOR_ZIPKIN_HOST_PORT=:9411
      - COLLECTOR_OTLP_ENABLED=true
    networks:
      - lumi-network

networks:
  lumi-network:
    driver: bridge

volumes:
  postgres_data:
  redis_data: